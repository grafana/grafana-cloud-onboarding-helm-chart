cluster:
  # Required. This is used to identify the cluster in Grafana Cloud.
  # You can use helm install --set cluster.name=$(kubectl config current-context) to set the name matching your kubeconfig.
  name: ""

# Connection information for Grafana Cloud Services
grafanaCloud:
  # Fleet Management for fetching Alloy configuration remotely
  fleetManagement:
    url: https://fleet.grafana.com
    auth:
      type: basic
      username: 123456
      password: glc_thisismypassword

    # -- The frequency at which to poll the remote config server for updates.
    # @section -- Remote Configuration
    pollFrequency: 5m

    # -- Attributes to be added to all collectors when requesting configuration.
    # @section -- Remote Configuration
    extraAttributes: {}

# The list of collectors to deploy. This is an object, so you can define multiple collectors.
# Supports all fields from the Alloy CRD (which is also the Alloy Helm chart).
collectors:
  alloy-daemon:
    # Additional attributes to send to Fleet Management.
    attributes: {}
    alloy:
      # storagePath: /var/log/alloy # TODO: use the varlogs mount to persist alloy data
      mounts:
        varlog: true
      securityContext:
        privileged: true
    controller:
      hostPID: true

# Extra components to deploy to the cluster to provide additional metric sources.
additionalComponents:
  # kube-state-metrics can be used to get metrics about the state of the kubernetes cluster health and performance.
  # Installed by default, so you can dynamically enable or disable it through Fleet Management remote configuration.
  kube-state-metrics:
    enabled: true

  # node-exporter is used to collect metrics about the health and performance of Linux nodes in the cluster.
  # Installed by default, so you can dynamically enable or disable it through Fleet Management remote configuration.
  node-exporter:
    enabled: true

  # windows-exporter is used to collect metrics about the health and performance of Windows nodes in the cluster.
  # Installed by default, so you can dynamically enable or disable it through Fleet Management remote configuration.
  windows-exporter:
    enabled: true

  # kepler is used to collect metrics about power usage of kubenetes cluster resources.
  # Installed by default, so you can dynamically enable or disable it through Fleet Management remote configuration.
  kepler:
    enabled: true

# TODO: add it in when ready to use
# cloud-cost-exporter:
#    enabled: true

# Configuration options for the Alloy Operator.
alloyOperator:
  enabled: true

global: {}

extraManifests: []
